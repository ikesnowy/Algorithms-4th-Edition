// f_i 为第 i 种主键出现的频率，必为非负整数
// 当主键值各不相同时，我们有
// k = N，f_1=f_2=...=f_k=1
// 此时可能的排列总数为 N!/f_1!...f_k!=N!/1=N!
// 故最少比较次数即为有 N! 个叶子节点的二叉树的最小高度
// h>=logN!
// 那么当主键值有重复时，我们同理可以推得
// h>=log(N!/(f_1!...f_k!))
// 当主键值有重复时，k < N，
// 那么为使 f_1+...+f_k=N
// 必存在一个 f_m > 1，且其他 f_i >= 1
// 故此时有 f_1!f_2!...f_k! >= 2 成立
// 因此 N!/f_1!...f_k! >= N!
// 那么 h >= log(N!/(f_1!...f_k!)) >= log(N!) ~ NlogN
// 证毕

return;