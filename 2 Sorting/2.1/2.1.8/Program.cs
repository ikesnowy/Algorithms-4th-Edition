// 平方级别
// 如果元素互不相同，那么很容易证明算法是平方级别的
// 接下来我们来看有重复元素的情况
// 假设三个值为 1 2 3，那么在排序过程中一定会出现这样的结构
// (a个1+b个2+c个3)(未排序数组)
// 最后的结果就是
// (a个1+b个2+c个3)
// 其中 a + b + c = N
// 对于之后的未排序数组，
// 插入 1 需要交换 b + c 次
// 插入 2 需要交换 c 次
// 插入 3 不需要交换
// 由于 1 2 3 出现的概率均等，平均每次插入需要代价为
// (2c + b)/3
// 每次插入后，2c + b 的值视情况会增加，具体如下：
// 如果插入 1，2c + b 的值不变
// 如果插入 2，2c + b 的值增加 1
// 如果插入 3，2c + b 的值增加 2
// 又由于 1 2 3 出现概率相等，
// 因此每次插入都会使下一次插入代价增加 1/3（(1 + 2) / 3 = 1）
// 开始插入代价为 0，每次插入后代价增加 1/3，
// 插入 N 次所需时间代价为：
// (0 + 1 + 2 + 3 + …… + N - 1)/3 = N(N-1)/6
// 因此运行时间是平方级别的。

return;